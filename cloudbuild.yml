steps:
  # Access the id_github file from Secret Manager
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', 'gcloud secrets versions access latest --secret=nmtf > /root/.ssh/nmtf' ]
    volumes:
    - name: 'ssh'
      path: /root/.ssh


  # Set up git with key and domain
  - name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      chmod 600 /root/.ssh/nmtf
      echo "Writing Hostname github.com\nIdentityFile /root/.ssh/nmtf to ssh config..."
      cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/nmtf
      EOF
      echo "Adding github to known host..."
      ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
    - name: 'ssh'
      path: /root/.ssh


  # Connect to the repository
  - name: gcr.io/cloud-builders/git
    args:
    - clone
    - --branch=$BRANCH_NAME
    - git@github.com:Advestis/nmtf
    - /repo
    volumes:
    - name: 'ssh'
      path: /root/.ssh
    - name: 'repo'
      path: /repo


  # Get the .git directory
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - -c
      - mv /repo/.git ./.git && let attempt=1 ; if ! [ -d .git ] ; then echo "Failed to move .git" ; exit 1 ; fi
    volumes:
    - name: 'repo'
      path: /repo


  # Create AdUtils' documentation
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: /bin/bash
    args:
      - -c
      - |-
        version="3.6"
        echo "Updating..."
        echo "Installing git, gcc, python$version..."
        add-apt-repository ppa:deadsnakes/ppa
        apt-get update
        apt-get install -y build-essential
        apt-get install -y git gcc python-dev python3-dev python${version}
        if [ "$version" == "3.5" ] or [ "$version" == "3.6" ] ; then
          apt-get install -y python${version}-dev
        elif [ "$version" == "3.7" ] ; then
          apt-get install -y libpython${version}-dev
        else
          echo "warning: will try to install header files for an unsupported version of python: ${version}"
          if ! apt-get install -y libpython${version}-dev ; then
            apt-get install -y python${version}-dev
          fi
        fi
        echo "Installing and updating pip3..."
        curl https://bootstrap.pypa.io/get-pip.py | python3.6
        pip3 install --upgrade pip
        echo "Installing setuptools..."
        pip3 install setuptools
        chmod +x ./install.sh
        echo "Installing nmtf..."
        ./install.sh -v ${version} -c install
        ./install.sh -v ${version} -c sdist
        echo "Copying docs/ to gs://pypi_server_sand/nmtf/..."
        gsutil cp -r docs/ gs://pypi_server_sand/nmtf/
        echo "Copying dist/* to gs://pypi_server_sand/nmtf/..."
        gsutil cp dist/* gs://pypi_server_sand/nmtf/


  # Build the container image and tag it
  - name: gcr.io/cloud-builders/docker
    args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/nmtf:latest', '-t', 'eu.gcr.io/$PROJECT_ID/nmtf:$COMMIT_SHA', '-f', 'Dockerfile', '.' ]


  # Push the container image to Container Registry
  - name: gcr.io/cloud-builders/docker
    args: [ 'push', 'eu.gcr.io/$PROJECT_ID/nmtf:latest' ]


  # Push the container image to Container Registry
  - name: gcr.io/cloud-builders/docker
    args: [ 'push', 'eu.gcr.io/$PROJECT_ID/nmtf:$COMMIT_SHA' ]

timeout: "1200s"
